ata2 <- merge(GDP, EDSTATS, all = TRUE, by = c("CountryCode"))
file.url <- 'https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv'
file.dest <- 'GDP.csv'
download.file(file.url, file.dest )
rowNames <- seq(10,200, 2)
gdp <- read.csv('GDP.csv', header=F, skip=5, nrows=190)''
gdp <- read.csv('GDP.csv', header=F, skip=5, nrows=190)
file.url <- 'https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv'
file.dest <- 'GDP2.csv'
download.file(file.url, file.dest )
fed <- read.csv('GDP2.csv')
combined <- merge(gdp, fed, by.x='V1', by.y='CountryCode', sort=TRUE)
combined[with(combined, order(-V2) )]
combined[with(combined, order(V2) )]
View(combined)
combined[with(combined, order(-V2) )]
sort(combined$V2)
View(combined)
arrange(combined, v2)
arrange(combined, V2)
head(combined)
mean(combined[combined$Income.Group=='High income: OECD',]$V2)
mean(combined[combined$Income.Group=='High income: nonOECD',]$V2)
quentile <- c(0.2,0.4,0.6,0.8,1)
q <- quantile(combined$V2, quentile)
q1 <- combined$V2 <= 38
xtabs(q1 ~ combined$Income.Group)
xtabs(q1 ~ combined$Income.Group)
library(reshape2)
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip"
download.file(fileUrl,destfile="./data/GACD-proj.zip",method="curl")
download.file(fileUrl,destfile="./data/GACD-proj.zip")
unzip(zipfile="./data/GACD-proj.zip",exdir="./data")
xtest <- read.table("./data/UCI HAR Dataset/test/X_test.txt")
ytest <- read.table("./data/UCI HAR Dataset/test/y_test.txt")
subtest <- read.table("./data/UCI HAR Dataset/test/subject_test.txt")
xtrain <- read.table("./data/UCI HAR Dataset/train/X_train.txt")
ytrain <- read.table("./data/UCI HAR Dataset/train/y_train.txt")
subtrain <- read.table("./data/UCI HAR Dataset/train/subject_train.txt")
view(subtrain)
str(subtrain)
str(subtest)
str(ytest)
features <- read.table("./data/UCI HAR Dataset/features.txt")
activities <- read.table("./data/UCI HAR Dataset/activity_labels.txt")
colnames(activities) <- c('ActivityID','ActivityType')
str(activities)
colnames(xtest) <- features[,2]
colnames(ytest) <- c("ActivityID")
colnames(activities) <- c("ActivityID","ActivityType")
colnames(subtest) < c("SubjectID")
colnames(subtest) <- c("SubjectID")
colnames(subtrain) <- c("SubjectID")
colnames(ytrain) <- c("ActivityID")
colnames(xtrain) <- features[,2]
test <- cbind(ytest,subtest,xtest)
train <- cbind(ytrain,subtrain,xtrain)
MainData <- rbind(train,test)
str(features)
FeaturesNames <- Features$V2[grep("mean\\(\\)|std\\(\\)", Features$V2)]
fitems <- features$V2[grep("mean\\(\\)|std\\(\\)", features$V2)]
str(fitems)
source(fitems)
fitems
selection <- c(as.character(fitems), "subject","activity")
submain1 <- subset(MainData, select=selection)
header(MainData,3)
header(MainData,n=3)
str(MainData,n=3)
View(MainData)
str(selection)
submain1 <- subset(MainData, select=c(selection)
submain1 <- subset(MainData, select=c(selection))
submain1 <- subset(MainData, select=c(fitems))
str(submain1)
str(fitems)
selection <- c(as.character(fitems), "subject","activity")
str(Selections)
str(Selection)
str(selection)
subdataFeaturesNames<-features$V2[grep("mean\\(\\)|std\\(\\)", features$V2)]
selectedNames<-c(as.character(subdataFeaturesNames), "subject", "activity" )
Data<-subset(Data,select=selectedNames)
Data<-subset(Data,select=subdataFeaturesNames)
Data<-subset(Data,select=selectedNames)
Data<-subset(MainData,select=selectedNames)
Data<-subset(MainData,select=subdataFeaturesNames)
str(Data)
Data<-subset(Data,select=selectedNames)
Data<-subset(Data,select=subdataFeaturesNames)
mean_std_sub <- MainData[,grepl("mean|std|Subject|ActivityId", names(MainData))]
fstr(mean_std_sub)
str(mean_std_sub)
str(mean_std_sub)
mean_std_sub_act = merge(mean_std_sub,activities,by='ActivityID',all.x=TRUE)
mean_std_sub_act = merge(mean_std_sub,activities,by='activityId',all.x=TRUE)
View(mean_std_sub)
View(activities)
View(submain1)
View(ytrain)
View(ytest)
mean_std_sub <- MainData[,grepl("mean|std|Subject|ActivityID", names(MainData))]
View(mean_std_sub)
View(activities)
mean_std_sub_act = merge(mean_std_sub,activities,by="ActivityID",all.x=TRUE)
str(mean_std_sub_act)
names(mean_std_sub_act)<-gsub("^t", "Time", names(mean_std_sub_act))
str(mean_std_sub_act)
names(mean_std_sub_act)<-gsub("^f", "Frequency", names(mean_std_sub_act))
names(mean_std_sub_act)<-gsub("Gyro", "Gyroscope", names(mean_std_sub_act))
names(mean_std_sub_act)<-gsub("BodyBody", "Body", names(mean_std_sub_act))
str(mean_std_sub_act)
names(mean_std_sub_act)<-gsub("Acc", "Accelerometer", names(mean_std_sub_act))
names(mean_std_sub_act)<-gsub("Mag", "Magnitude", names(mean_std_sub_act))
tidydata = ddply(mean_std_sub_act, c("Subject","Activity"), numcolwise(mean))
tidydata = ddply(mean_std_sub_act, c("SubjectID","ActivityID"), numcolwise(mean))
write.table(tidydata, file = "tidydata.txt",sep="\t")
write.table(tidydata, file = "./data/tidydata.txt",sep="\t")
library(knitr)
install.packages("knitr")
library(knitr)
knit2html("./data/codebook.Rmd")
knit2html("codebook.Rmd")
codebook(tidydata)
install.packages("memisc")
library(memisc)
codebook(tidydata)
codebook(?)
lsf.str("package:memisc")
codebook(tidydata)
codebook("./data/tidydata.txt")
str(tidydata)
names(tidydata)
write.table(tidydata, file = "./data/tidydata.txt", row.name=FALSE)
download.file("https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2FNEI_data.zip","EDA2.zip")
unzip("eda2.zip")
nei <- readRDS("summarySCC_PM25")
nei <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
Emmissions <- with(NEI,aggregate(Emmissions, by = list(year), sum))
Emmissions <- with(nei,aggregate(Emmissions, by = list(year), sum))
Emmissions <- with(nei,aggregate(Emissions, by = list(year), sum))
library(plyr)
library(ggplot2)
plot(Emmissions, ylab="Total Emissions, PM2.5", xlab="Year", "Total Emissions from PM2.5 by Year in the U.S.")
plot(Emmissions, type= "1", ylab="Total Emissions, PM2.5", xlab="Year", "Total Emissions from PM2.5 by Year in the U.S.")
plot(Emmissions, type= "1", ylab="Total Emissions, PM2.5", xlab="Year", main="Total Emissions from PM2.5 by Year in the U.S.")
plot(Emmissions, type= 1, ylab="Total Emissions, PM2.5", xlab="Year", "Total Emissions from PM2.5 by Year in the U.S.")
plot(Emmissions, type= 1, ylab="Total Emissions, PM2.5", xlab="Year", main="Total Emissions from PM2.5 by Year in the U.S.")
plot(Emmissions, type= "l", ylab="Total Emissions, PM2.5", xlab="Year", main="Total Emissions from PM2.5 by Year in the U.S.")
plot(Emmissions, type= "b", ylab="Total Emissions, PM2.5", xlab="Year", main="Total Emissions from PM2.5 by Year in the U.S.")
plot(Emmissions, type= "h", ylab="Total Emissions, PM2.5", xlab="Year", main="Total Emissions from PM2.5 by Year in the U.S.")
plot(Emmissions, type= "b", ylab="Total Emissions, PM2.5", xlab="Year", main="Total Emissions from PM2.5 by Year in the U.S.")
plot(Emmissions, type= "b", col="blue", ylab="Total Emissions, PM2.5", xlab="Year", main="Total Emissions from PM2.5 by Year in the U.S.")
plot(Emmissions, type= "b", col="blue", lwd=2, ylab="Total Emissions, PM2.5", xlab="Year", main="Total Emissions from PM2.5 by Year in the U.S.")
nei <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
Emmissions <- with(nei,aggregate(Emissions, by = list(year), sum))
library(plyr)
ibrary(ggplot2)
plot(Emmissions, type= "b", col="blue", lwd=2, ylab="Total Emissions, PM2.5", xlab="Year", main="Total Emissions from PM2.5 by Year in the U.S.")
nei <- readRDS("summarySCC_PM25.rds");
SCC <- readRDS("Source_Classification_Code.rds");
Emmissions <- with(nei,aggregate(Emissions, by = list(year), sum));
library(plyr);
library(ggplot2);
plot(Emmissions, type= "b", col="blue", lwd=2, ylab="Total Emissions, PM2.5", xlab="Year", main="Total Emissions from PM2.5 by Year in the U.S.");
nei <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
Emmissions <- with(nei,aggregate(Emissions, by = list(year), sum))
library(plyr)
library(ggplot2)
plot(Emmissions, type= "b", col="blue", lwd=2, ylab="Total Emissions, PM2.5", xlab="Year", main="Total Emissions from PM2.5 by Year in the U.S.")
dev.copy(png, file="plot1.png", width=480, height=480)
graphics.off()
neibalt <- subset(nei, nei$fips=="24510")
EmmissionsBalt <- with(neibalt,aggregate(Emissions, by = list(year), sum))
plot(EmmissionsBalt, type= "b", col="blue", lwd=2, ylab="Total Emissions, PM2.5", xlab="Year", main="Total Emissions from PM2.5 by Year in the U.S.")
nei <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
neibalt <- subset(nei, nei$fips=="24510")
EmmissionsBalt <- with(neibalt,aggregate(Emissions, by = list(year), sum))
plot(EmmissionsBalt, type= "b", col="blue", lwd=2, ylab="Total Emissions, PM2.5", xlab="Year", main="Total Emissions from PM2.5 by Year in the U.S.")
nei <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
neibalt <- subset(nei, nei$fips=="24510")
EmmissionsBalt <- with(neibalt,aggregate(Emissions, by = list(year), sum))
plot(EmmissionsBalt, type= "l", col="red", lwd=2, ylab="Total Emissions, PM2.5", xlab="Year", main="Total Emissions from PM2.5 by Year for Baltimore")
dev.copy(png, file="plot2.png", width=480, height=480)
graphics.off()
plot(EmmissionsBalt, type= "b", group=Pollutant_Type, col="blue", lwd=2, ylab="Total Emissions, PM2.5", xlab="Year", main="Total Emissions from PM2.5 by Year in the U.S.")
EmmissionsBaltSource <- aggregate(neibalt[c("Emissions")], list(type = neibalt$type, year = neibalt$year), sum)
EmmissionsBaltType <- aggregate(neibalt[c("Emissions")], list(type = neibalt$type, year = neibalt$year), sum)
qplot(year, Emissions, data = EmmissionsBaltType, color=type, geom="line")
qplot(year, Emissions, data = EmmissionsBaltType, color=type, geom="line") + ggtitle("Total Emissions From PM2.5 by Year for Baltimore by Source Type")+ylab("Total Emissions, PM2.5") + xlab("Year")
qplot(year, Emissions, data = EmmissionsBaltType, color=type, geom="line", lwd=2) + ggtitle("Total Emissions From PM2.5 by Year for Baltimore by Source Type")+ylab("Total Emissions, PM2.5") + xlab("Year")
qplot(year, Emissions, data = EmmissionsBaltType, color=type, geom="line") + ggtitle("Total Emissions From PM2.5 by Year for Baltimore by Source Type")+ylab("Total Emissions, PM2.5") + xlab("Year")
neibalt <- subset(nei, nei$fips=="24510")
EmmissionsBalt <- with(neibalt,aggregate(Emissions, by = list(year), sum))
EmmissionsBaltType <- aggregate(neibalt[c("Emissions")], list(type = neibalt$type, year = neibalt$year), sum)
qplot(year, Emissions, data = EmmissionsBaltType, color=type, geom="line") + ggtitle("Total Emissions From PM2.5 by Year for Baltimore by Source Type")+ylab("Total Emissions, PM2.5") + xlab("Year")
qplot(year, Emissions, data = EmmissionsBaltType, color=type, geom="line") + ggtitle("Total Emissions From PM2.5 by Year for Baltimore by Source Type")+ylab("Total Emissions, PM2.5") + xlab("Year")+ geom_point()
qplot(year, Emissions, data = EmmissionsBaltType, color=type, geom="line") + ggtitle("Total Emissions From PM2.5 by Year for Baltimore by Source Type")+ylab("Total Emissions, PM2.5") + xlab("Year")+ geom_point()
nei <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
neibalt <- subset(nei, nei$fips=="24510")
EmmissionsBalt <- with(neibalt,aggregate(Emissions, by = list(year), sum))
EmmissionsBaltType <- aggregate(neibalt[c("Emissions")], list(type = neibalt$type, year = neibalt$year), sum)
qplot(year, Emissions, data = EmmissionsBaltType, color=type, geom="line") + ggtitle("Total Emissions From PM2.5 by Year for Baltimore by Source Type")+ylab("Total Emissions, PM2.5") + xlab("Year")+ geom_point()
dev.copy(png, file="plot3.png", width=480, height=480)
graphics.off()
graphics.off()
nei <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
neibalt <- subset(nei, nei$fips=="24510")
EmmissionsBalt <- with(neibalt,aggregate(Emissions, by = list(year), sum))
EmmissionsBaltType <- aggregate(neibalt[c("Emissions")], list(type = neibalt$type, year = neibalt$year), sum)
qplot(year, Emissions, data = EmmissionsBaltType, color=type, geom="line") + ggtitle("Total Emissions From PM2.5 by Year for Baltimore by Source Type")+ylab("Total Emissions, PM2.5") + xlab("Year")+ geom_point()
dev.copy(png, file="plot3.png", width=480, height=480)
graphics.off()
graphics.off()
nei <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
neibalt <- subset(nei, nei$fips=="24510")
EmmissionsBalt <- with(neibalt,aggregate(Emissions, by = list(year), sum))
EmmissionsBaltType <- aggregate(neibalt[c("Emissions")], list(type = neibalt$type, year = neibalt$year), sum)
qplot(year, Emissions, data = EmmissionsBaltType, color=type, geom="line") + ggtitle("Total Emissions From PM2.5 by Year for Baltimore by Source Type")+ylab("Total Emissions, PM2.5") + xlab("Year")+ geom_point()
dev.copy(png, file="plot3.png", width=640, height=640)
graphics.off()
graphics.off()
nei <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
neibalt <- subset(nei, nei$fips=="24510")
EmmissionsBalt <- with(neibalt,aggregate(Emissions, by = list(year), sum))
EmmissionsBaltType <- aggregate(neibalt[c("Emissions")], list(type = neibalt$type, year = neibalt$year), sum)
qplot(year, Emissions, data = EmmissionsBaltType, color=type, geom="line") + ggtitle("Total Emissions From PM2.5 by
Year for Baltimore by Source Type")+ylab("Total Emissions, PM2.5") + xlab("Year")+ geom_point()
dev.copy(png, file="plot3.png", width=640, height=640)
graphics.off()
graphics.off()
nei <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
neibalt <- subset(nei, nei$fips=="24510")
EmmissionsBalt <- with(neibalt,aggregate(Emissions, by = list(year), sum))
plot(EmmissionsBalt, type= "l", col="red", lwd=2, ylab="Total Emissions, PM2.5", xlab="Year", main="Total Emissions
from PM2.5 by Year for Baltimore")
dev.copy(png, file="plot2.png", width=640, height=640)
graphics.off()
graphics.off()
nei <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
Emmissions <- with(nei,aggregate(Emissions, by = list(year), sum))
library(plyr)
library(ggplot2)
plot(Emmissions, type= "b", col="blue", lwd=2, ylab="Total Emissions, PM2.5", xlab="Year", main="Total Emissions
from PM2.5 by Year in the U.S.")
dev.copy(png, file="plot1.png", width=640, height=640)
graphics.off()
graphics.off()
nei <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
Emmissions <- with(nei,aggregate(Emissions, by = list(year), sum))
library(plyr)
library(ggplot2)
plot(Emmissions, type= "b", col="blue", lwd=2, ylab="Total Emissions, PM2.5", xlab="Year", main="Total Emissions from PM2.5 by Year in the U.S.")
dev.copy(png, file="plot1.png", width=640, height=640)
#Remove the below line with graphics.off() to see the plot in the plotting window.  Until this is turned off the file will not be accessible since we can still write to it.
graphics.off()
graphics.off()
nei <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
neibalt <- subset(nei, nei$fips=="24510")
EmmissionsBalt <- with(neibalt,aggregate(Emissions, by = list(year), sum))
plot(EmmissionsBalt, type= "l", col="red", lwd=2, ylab="Total Emissions, PM2.5", xlab="Year", main="Total Emissions from PM2.5 by Year for Baltimore")
dev.copy(png, file="plot2.png", width=640, height=640)
#Remove the below line with graphics.off() to see the plot in the plotting window.  Until this is turned off the file will not be accessible since we can still write to it.
graphics.off()
graphics.off()
nei <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
neibalt <- subset(nei, nei$fips=="24510")
EmmissionsBalt <- with(neibalt,aggregate(Emissions, by = list(year), sum))
EmmissionsBaltType <- aggregate(neibalt[c("Emissions")], list(type = neibalt$type, year = neibalt$year), sum)
qplot(year, Emissions, data = EmmissionsBaltType, color=type, geom="line") + ggtitle("Total Emissions From PM2.5 by Year for Baltimore by Source Type")+ylab("Total Emissions, PM2.5") + xlab("Year")+ geom_point()
dev.copy(png, file="plot3.png", width=640, height=640)
#Remove the below line with graphics.off() to see the plot in the plotting window.  Until this is turned off the file will not be accessible since we can still write to it.
graphics.off()
View(SCC)
CoalValues <- unique(grep("coal", SCC$EI.Sector, ignore.case = TRUE, value=TRUE))
CoalSub <- subset(SCC, EI.Sector %in% CoalValues)
CoalFinal <- subset(NEI, SCC %in% CoalSub$SCC)
CoalFinal <- subset(nei, SCC %in% CoalSub$SCC)
qplot(year, Emissions, data = CoalFinal, color=type, geom="line") + ggtitle("Total Emissions From PM2.5 by Year for Baltimore by Source Type")+ylab("Total Emissions, PM2.5") + xlab("Year")+ geom_point()
qplot(year, Emissions, data = CoalFinal, color=type, geom="bar") + ggtitle("Total Emissions From PM2.5 by Year for Baltimore by Source Type")+ylab("Total Emissions, PM2.5") + xlab("Year")+ geom_point()
qplot(year, Emissions, data = CoalFinal, color=type) + geom_bar(stat="identity", position=position_dodge()) + ggtitle("Total Emissions From PM2.5 by Year for Baltimore by Source Type")+ylab("Total Emissions, PM2.5") + xlab("Year")+ geom_point()
qplot(year, Emissions, data = CoalFinal, color=type) + geom_bar(stat="identity", position=position_dodge()) + ggtitle("Total Emissions From PM2.5 by Year for Baltimore by Source Type")+ylab("Total Emissions, PM2.5") + xlab("Year")
ggplot(data=CoalFinal, aes(x=year, y=Emissions, fill=type))
ggplot(data=CoalFinal, aes(x=year, y=Emissions, fill=type)) + geom_bar(stat="identity", position=position_dodge())
ggplot(data=CoalFinal, aes(x=year, y=Emissions, fill=type)) + geom_bar(stat="identity", position="stack")
ggplot(data=CoalFinal, aes(x=year, y=Emissions, fill=type)) + geom_bar(stat="identity", position=position_dodge())
ggplot(data=CoalFinal, aes(x=year, y=Emissions, fill=type)) + geom_bar(stat="bin", position=position_dodge())
ggplot(data=CoalFinal, aes(x=year, fill=type)) + geom_bar(stat="bin", position=position_dodge())
ggplot(data=CoalFinal, aes(x=year, y=Emissions, fill=type)) + geom_bar(stat="identity", position=position_dodge())
ggplot(data=CoalFinal, aes(x=year, y=Emissions, fill=type)) + geom_bar(stat="identity", position=position_dodge())+stat_summary(fun.y="sum", color="black", aes(shape="total"), geom="line")
ggplot(data=CoalFinal, aes(x=year, y=Emissions, fill=type)) + geom_bar(stat="identity", position=position_dodge())
dev.copy(png, file="plot4.png", width=640, height=640)
graphics.off()
graphics.off()
nei <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
CoalValues <- unique(grep("coal", SCC$EI.Sector, ignore.case = TRUE, value=TRUE))
CoalSub <- subset(SCC, EI.Sector %in% CoalValues)
CoalFinal <- subset(nei, SCC %in% CoalSub$SCC)
ggplot(data=CoalFinal, aes(x=year, y=Emissions, fill=type)) + geom_bar(stat="identity", position=position_dodge())
dev.copy(png, file="plot4.png", width=640, height=640)
#Remove the below line with graphics.off() to see the plot in the plotting window.  Until this is turned off the file will not be accessible since we can still write to it.
graphics.off()
ggplot(data=CoalFinal, aes(x=year, y=Emissions, fill=type)) + geom_bar(stat="identity", position=position_dodge()) + ggtitle("Total Emissions From PM2.5 by Year for Baltimore by Source Type")
ggplot(data=CoalFinal, aes(x=year, y=Emissions, fill=type)) + geom_bar(stat="identity", position=position_dodge()) + ggtitle("Changes in Emissions from Coal Combustion Related Sources in the U.S. by Year")
ggplot(data=CoalFinal, aes(x=year, y=Emissions, fill=type)) + geom_bar(stat="identity", position=position_dodge()) + ggtitle("Changes in Emissions from Coal Combustion Related Sources in the U.S. by Year")+ xlab("Year")
graphics.off()
nei <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
CoalValues <- unique(grep("coal", SCC$EI.Sector, ignore.case = TRUE, value=TRUE))
CoalSub <- subset(SCC, EI.Sector %in% CoalValues)
CoalFinal <- subset(nei, SCC %in% CoalSub$SCC)
ggplot(data=CoalFinal, aes(x=year, y=Emissions, fill=type)) + geom_bar(stat="identity", position=position_dodge()) + ggtitle("Changes in Emissions from Coal Combustion Related Sources in the U.S. by Year")+ xlab("Year")
dev.copy(png, file="plot4.png", width=640, height=640)
#Remove the below line with graphics.off() to see the plot in the plotting window.  Until this is turned off the file will not be accessible since we can still write to it.
graphics.off()
View(nei)
onroadsub <- subset(nei, fips == "24510" & type=="ON-ROAD")
baltsonroad <- aggregate(onroadsub[c("Emissions")], list(type=onroadsub$type, year=onroadsub$year, zip=onroadsub$fips),sum)
qplot(year, Emissions, data=baltsonroad, geom="line") + geom_point() + ggtitle("Motor Vehicle Emissions in Baltimore")+ylab("Year")
qplot(year, Emissions, data=baltsonroad, geom="line") + geom_point() + ggtitle("Motor Vehicle Emissions in Baltimore")+xlab("Year")
qplot(year, Emissions, data=baltsonroad, geom="line") + geom_point() + ggtitle("Motor Vehicle Emissions in Baltimore")+xlab("Year")+theme_red()
qplot(year, Emissions, data=baltsonroad, geom="line") + geom_point() + ggtitle("Motor Vehicle Emissions in Baltimore")+xlab("Year")
baltsonroad <- aggregate(onroadsub[c("Emissions")], list(type=onroadsub$type, year=onroadsub$year)
baltsonroad <- aggregate(onroadsub[c("Emissions")], list(type=onroadsub$type, year=onroadsub$year)
baltsonroad <- aggregate(onroadsub[c("Emissions")], list(type=onroadsub$type, year=onroadsub$year))
baltsonroad <- aggregate(onroadsub[c("Emissions")], list(type=onroadsub$type, year=onroadsub$year),sum)
qplot(year, Emissions, data=baltsonroad, geom="line") + geom_point() + ggtitle("Motor Vehicle Emissions in Baltimore")+xlab("Year")
baltsonroad <- aggregate(onroadsub[c("Emissions")], list(year=onroadsub$year),sum)
qplot(year, Emissions, data=baltsonroad, geom="line") + geom_point() + ggtitle("Motor Vehicle Emissions in Baltimore")+xlab("Year")
baltsonroad <- aggregate(onroadsub[c("Emissions")],sum)
baltsonroad <- aggregate(onroadsub[c("Emissions")], list(year=onroadsub$year),sum)
qplot(year, Emissions, data=baltsonroad, geom="line") + geom_point() + ggtitle("Motor Vehicle Emissions in Baltimore")+xlab("Year")
graphics.off()
nei <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
#After reviewing some responses in the forums going with on-road since this seems like it would include all vehicles.
onroadsub <- subset(nei, fips == "24510" & type=="ON-ROAD")
#Aggregating the data so it's ready for plotting...
#baltsonroad <- aggregate(onroadsub[c("Emissions")], list(type=onroadsub$type, year=onroadsub$year, zip=onroadsub$fips),sum)
baltsonroad <- aggregate(onroadsub[c("Emissions")], list(year=onroadsub$year),sum)
qplot(year, Emissions, data=baltsonroad, geom="line") + geom_point() + ggtitle("Motor Vehicle Emissions in Baltimore")+xlab("Year")
dev.copy(png, file="plot5.png", width=640, height=640)
#Remove the below line with graphics.off() to see the plot in the plotting window.  Until this is turned off the file will not be accessible since we can still write to it.
graphics.off()
graphics.off()
nei <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
#After reviewing some responses in the forums going with on-road since this seems like it would include all vehicles.
onroadsub <- subset(nei, fips == "24510" & type=="ON-ROAD")
#Aggregating the data so it's ready for plotting...
#baltsonroad <- aggregate(onroadsub[c("Emissions")], list(type=onroadsub$type, year=onroadsub$year, zip=onroadsub$fips),sum)
baltsonroad <- aggregate(onroadsub[c("Emissions")], list(year=onroadsub$year),sum)
qplot(year, Emissions, data=baltsonroad, geom="line") + geom_point() + ggtitle("Motor Vehicle Emissions in Baltimore")+xlab("Year")
dev.copy(png, file="plot5.png", width=640, height=640)
#Remove the below line with graphics.off() to see the plot in the plotting window.  Until this is turned off the file will not be accessible since we can still write to it.
graphics.off()
#just in case, may not be needed.
graphics.off()
nei <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
#Get all values that have coal in their name, not case sensitive
CoalValues <- unique(grep("coal", SCC$EI.Sector, ignore.case = TRUE, value=TRUE))
#Get all information regarding the coal values from the SCC dataset
#This allows us to use the SCC number to lookup the correct NEI values.
CoalSub <- subset(SCC, EI.Sector %in% CoalValues)
#Using CoalSub subset get all NEI values that have a matching SCC number.
CoalFinal <- subset(nei, SCC %in% CoalSub$SCC)
ggplot(data=CoalFinal, aes(x=year, y=Emissions, fill=type)) + geom_bar(stat="identity", position=position_dodge()) + ggtitle("Changes in Emissions from Coal Combustion Related Sources in the U.S. by Year")+ xlab("Year")
dev.copy(png, file="plot4.png", width=640, height=640)
#Remove the below line with graphics.off() to see the plot in the plotting window.  Until this is turned off the file will not be accessible since we can still write to it.
graphics.off()
graphics.off()
nei <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
#Aggregate by year
Emmissions <- with(nei,aggregate(Emissions, by = list(year), sum))
#Create plot adding labels and modifying some things
plot(Emmissions, type= "b", col="blue", lwd=2, ylab="Total Emissions, PM2.5", xlab="Year", main="Total Emissions from PM2.5 by Year in the U.S.")
#copy to png file. Do screen first so I can see what the plot looks like.
dev.copy(png, file="plot1.png", width=640, height=640)
#Remove the below line with graphics.off() to see the plot in the plotting window.  Until this is turned off the file will not be accessible since we can still write to it.
graphics.off()
graphics.off()
nei <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
#Filter for baltimore only
neibalt <- subset(nei, nei$fips=="24510")
#Aggregate the filtered data
EmmissionsBalt <- with(neibalt,aggregate(Emissions, by = list(year), sum))
#plot the data
plot(EmmissionsBalt, type= "l", col="red", lwd=2, ylab="Total Emissions, PM2.5", xlab="Year", main="Total Emissions from PM2.5 by Year for Baltimore")
#copy the screen device to a png file
dev.copy(png, file="plot2.png", width=640, height=640)
#Remove the below line with graphics.off() to see the plot in the plotting window.  Until this is turned off the file will not be accessible since we can still write to it.
graphics.off()
graphics.off()
nei <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
#filter to baltimore only
neibalt <- subset(nei, nei$fips=="24510")
#Aggregate by year
#EmmissionsBalt <- with(neibalt,aggregate(Emissions, by = list(year), sum))
#Aggregate the baltimore data by year and type
EmmissionsBaltType <- aggregate(neibalt[c("Emissions")], list(type = neibalt$type, year = neibalt$year), sum)
#Plotting the data...
qplot(year, Emissions, data = EmmissionsBaltType, color=type, geom="line") + ggtitle("Total Emissions From PM2.5 by Year for Baltimore by Source Type")+ylab("Total Emissions, PM2.5") + xlab("Year")+ geom_point()
#Copying the screen device to a png file.
dev.copy(png, file="plot3.png", width=640, height=640)
#Remove the below line with graphics.off() to see the plot in the plotting window.  Until this is turned off the file will not be accessible since we can still write to it.
graphics.off()
#just in case, may not be needed.
graphics.off()
nei <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
#Get all values that have coal in their name, not case sensitive
CoalValues <- unique(grep("coal", SCC$EI.Sector, ignore.case = TRUE, value=TRUE))
#Get all information regarding the coal values from the SCC dataset
#This allows us to use the SCC number to lookup the correct NEI values.
CoalSub <- subset(SCC, EI.Sector %in% CoalValues)
#Using CoalSub subset get all NEI values that have a matching SCC number.
CoalFinal <- subset(nei, SCC %in% CoalSub$SCC)
ggplot(data=CoalFinal, aes(x=year, y=Emissions, fill=type)) + geom_bar(stat="identity", position=position_dodge()) + ggtitle("Changes in Emissions from Coal Combustion Related Sources in the U.S. by Year")+ xlab("Year")
dev.copy(png, file="plot4.png", width=640, height=640)
#Remove the below line with graphics.off() to see the plot in the plotting window.  Until this is turned off the file will not be accessible since we can still write to it.
graphics.off()
baltonroad <- subset(nei, fips == "24510" & type=="ON-ROAD")
LAonroad <- subset(nei, fips == "06037" & type=="ON-ROAD")
AllData <- rbind(baltonroad,LAonroad)
AllData$City <- ifelse(AllData$fips=="24510","Baltimore","Los Angeles")
plotdata <- aggregate(AllData[c("Emissions")], list(year=AllData$year, city=AllDAta$City),sum)
plotdata <- aggregate(AllData[c("Emissions")], list(year=AllData$year, city=AllData$City),sum)
qplot(year, Emissions, data=baltsonroad, geom="line", color=City) + geom_point() + ggtitle("Motor Vehicle Emissions in Baltimore")+xlab("Year")
View(neibalt)
View(AllData)
qplot(year, Emissions, data=AllData, geom="line", color=City) + geom_point() + ggtitle("Motor Vehicle Emissions, Baltimore vs. Los Angeles")+xlab("Year")
plotdata <- aggregate(AllData[c("Emissions")], list(year=AllData$year, city=AllData$City),sum)
qplot(year, Emissions, data=plotdata, geom="line", color=City) + geom_point() + ggtitle("Motor Vehicle Emissions in Baltimore")+xlab("Year")
View(neibalt)
View(plotdata)
qplot(year, Emissions, data=plotdata, geom="line", color=city) + geom_point() + ggtitle("Motor Vehicle Emissions in Baltimore")+xlab("Year")
qplot(year, Emissions, data=plotdata, geom="line", lwd=2, color=city) + geom_point() + ggtitle("Motor Vehicle Emissions in Baltimore")+xlab("Year")
qplot(year, Emissions, data=plotdata, geom="line", color=city) + geom_point() + ggtitle("Motor Vehicle Emissions in Baltimore")+xlab("Year")
graphics.off()
nei <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
#After reviewing some responses in the forums going with on-road since this seems like it would include all vehicles.
#Baltimore Data
baltonroad <- subset(nei, fips == "24510" & type=="ON-ROAD")
#After reviewing some responses in the forums going with on-road since this seems like it would include all vehicles.
#losangeles Data
LAonroad <- subset(nei, fips == "06037" & type=="ON-ROAD")
#Combining the two datasets to put in a single plot.
AllData <- rbind(baltonroad,LAonroad)
#Adding City to make the plot a bit more friendly and aggregating the data so it's ready for plotting...
AllData$City <- ifelse(AllData$fips=="24510","Baltimore","Los Angeles")
plotdata <- aggregate(AllData[c("Emissions")], list(year=AllData$year, city=AllData$City),sum)
qplot(year, Emissions, data=plotdata, geom="line", color=city) + geom_point() + ggtitle("Motor Vehicle Emissions in Baltimore")+xlab("Year")
dev.copy(png, file="plot6.png", width=640, height=640)
#Remove the below line with graphics.off() to see the plot in the plotting window.  Until this is turned off the file will not be accessible since we can still write to it.
graphics.off()
graphics.off()
nei <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
#After reviewing some responses in the forums going with on-road since this seems like it would include all vehicles.
onroadsub <- subset(nei, fips == "24510" & type=="ON-ROAD")
#Aggregating the data so it's ready for plotting...
baltsonroad <- aggregate(onroadsub[c("Emissions")], list(year=onroadsub$year),sum)
qplot(year, Emissions, data=baltsonroad, geom="line") + geom_point() + ggtitle("Motor Vehicle Emissions in Baltimore")+xlab("Year")
dev.copy(png, file="plot5.png", width=640, height=640)
#Remove the below line with graphics.off() to see the plot in the plotting window.  Until this is turned off the file will not be accessible since we can still write to it.
graphics.off()
install.packages("knitr")
source('~/.active-rstudio-document', echo=TRUE)
View(actraw)
hist(Act_dly_sum$total_steps, breaks=10, main="Frequecy of the Total Number of Steps by Day", xlab="Total number of steps", xlim=c(0,25000), col="yellow")
hist(tapply(actraw$steps, actraw$date, sum), breaks=10, main="Frequecy of the Total Number of Steps by Day", xlab="Total number of steps", xlim=c(0,25000), col="yellow")
daily_steps <- tapply(actraw$steps, actraw$date, sum)
dealy_mean <- mean(daily_steps, na.rm=TRUE)
dealy_median <- median(daily_steps, na.rm=TRUE)
daily_steps <- as.numeric(tapply(actraw$steps, actraw$date, sum))
dealy_median <- median(daily_steps, na.rm=TRUE)
dealy_mean <- mean(daily_steps, na.rm=TRUE)
daily_mean <- round(mean(daily_steps, na.rm=TRUE),1)
daily_median <- round(median(daily_steps, na.rm=TRUE),1)
daily_mean <- round(mean(daily_steps, na.rm=TRUE),1)
daily_mean <- round(mean(daily_steps, na.rm=TRUE))
daily_median <- round(median(daily_steps, na.rm=TRUE))
View(actraw)
interval_avg <- as.numeric(tapply(actraw$steps, actraw$interval, average))
interval_avg <- as.numeric(tapply(actraw$steps, actraw$interval, avg))
interval_avg <- as.numeric(tapply(actraw$steps, actraw$interval, mean))
interval_avg <- as.numeric(tapply(actraw$steps, actraw$interval, mean, na.rm=TRUE))
setwd("C:/RR/Week1")
library("knitr")
if(!require(installr)) {
install.packages("installr"); require(installr)} #load / install+load installr
updateR()
